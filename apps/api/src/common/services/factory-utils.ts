import { Injectable } from '@nestjs/common'
import { IActiveUser } from 'src/iam/interfaces/i-active-user'

@Injectable()
export class FactoryUtils {
  /**
   *  Returns the real person trying to access this account
   *  By default sub is for account owner,
   *  but if the logged in person is a member, memberId is set to
   *  the current logged in user, and sub is for the account owner
   *
   * @param activeUser
   * @returns
   */
  whoIs(activeUser: IActiveUser) {
    return activeUser?.memberId ? activeUser.memberId : activeUser.sub
  }

  /**
   * Helper method that extracts error object thrown by mongoose
   * when a duplicate key is found in a collection and generates
   * a friendly error message
   *
   * @param error Error instance
   * @returns friendly error message
   */
  autoGenerateDuplicateMessage(error: Error) {
    let message: string
    if (error?.message?.includes('E11000')) {
      message =
        'Duplicate ' +
        error.message
          .match(/(\{.*\})/gi)
          .at(0)
          .replace('{', '')
          .replace('}', '')
          .replace('"', '(')
          .replace('"', ')')
          .trim()
          .split(':')
          .join(' field with value') +
        ' already exists'
    }
    return message
  }

  slugify(prettyName: string, prefix?: string) {
    let str = prettyName.toLowerCase().replaceAll(' ', '-')

    if (prefix) {
      str = `${prefix}-${str}`
    }

    return str
  }
}
